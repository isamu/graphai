"use strict";var e=require("@graphai/step_runner_agent_filter"),t=require("@graphai/stream_agent_filter"),r=require("@graphai/cache_agent_filter"),n=require("@graphai/namedinput_validator_agent_filter"),a=require("graphai"),o=require("@graphai/agent_filter_utils");const i=async(e,t,r,n,a)=>{const o=async function*(e,t,r){const{params:n,namedInputs:a,debugInfo:o,filterParams:i}=t,s={params:n,debugInfo:o,filterParams:i,namedInputs:a},u={...r,"Content-Type":"text/event-stream"},l=await fetch(e,{headers:u,method:"POST",body:JSON.stringify(s)}),c=l.body?.getReader();if(200!==l.status||!c)throw new Error("Request failed");const p=new TextDecoder("utf-8");let d=!1;for(;!d;){const{done:e,value:t}=await c.read();if(e)d=e,c.releaseLock();else{const e=p.decode(t,{stream:!0});yield e}}}(t,r,n),i=[];for await(const t of o)a&&console.log(t),t&&(i.push(t),-1===i.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const s=i.join("").split("___END___")[1];return JSON.parse(s)};Object.defineProperty(exports,"consoleStepRunner",{enumerable:!0,get:function(){return e.consoleStepRunner}}),Object.defineProperty(exports,"stepRunnerGenerator",{enumerable:!0,get:function(){return e.stepRunnerGenerator}}),Object.defineProperty(exports,"streamAgentFilterGenerator",{enumerable:!0,get:function(){return t.streamAgentFilterGenerator}}),Object.defineProperty(exports,"cacheAgentFilterGenerator",{enumerable:!0,get:function(){return r.cacheAgentFilterGenerator}}),Object.defineProperty(exports,"sortObjectKeys",{enumerable:!0,get:function(){return r.sortObjectKeys}}),Object.defineProperty(exports,"agentInputValidator",{enumerable:!0,get:function(){return n.agentInputValidator}}),Object.defineProperty(exports,"namedInputValidatorFilter",{enumerable:!0,get:function(){return n.namedInputValidatorFilter}}),Object.defineProperty(exports,"agentFilterRunnerBuilder",{enumerable:!0,get:function(){return o.agentFilterRunnerBuilder}}),exports.httpAgentFilter=async(e,t)=>{const{params:r,debugInfo:n,filterParams:o,namedInputs:s,config:u}=e;if(o?.server){const{baseUrl:t,isDebug:l,serverAgentUrlDictionary:c}=o.server,p=u?.headers??{};if(!a.isObject(p))throw new Error("httpAgentFilter: headers is not object.");const d=n.agentId,f=void 0!==o.streamTokenCallback,g=c&&d&&c[d]?c[d]:[t,d].join("/");void 0===g&&console.log("httpAgentFilter: Url is not defined");const m={params:r,debugInfo:n,filterParams:o,namedInputs:s,inputs:s};return f?await i(e,g,m,p,l):await(async(e,t,r)=>{const n={...r,"Content-Type":"application/json"},a=await fetch(e,{method:"post",headers:n,body:JSON.stringify(t)});return await a.json()})(g,m,p)}return t(e)};
//# sourceMappingURL=bundle.cjs.js.map
