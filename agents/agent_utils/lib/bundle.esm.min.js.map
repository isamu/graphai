{"version":3,"file":"bundle.esm.min.js","sources":["../src/index.ts"],"sourcesContent":["import { AgentFunctionInfoSample, GraphData, NodeData, DefaultInputData, assert } from \"graphai\";\nexport * from \"./type\";\n\nexport const sample2GraphData = (sample: AgentFunctionInfoSample, agentName: string) => {\n  const nodes: Record<string, NodeData> = {};\n  const inputs = (() => {\n    if (Array.isArray(sample.inputs)) {\n      Array.from(sample.inputs.keys()).forEach((key) => {\n        nodes[\"sampleInput\" + key] = {\n          value: sample.inputs[key],\n        };\n      });\n      return Object.keys(nodes).map((k) => \":\" + k);\n    }\n    nodes[\"sampleInput\"] = {\n      value: sample.inputs,\n    };\n    return Object.keys(sample.inputs).reduce((tmp: Record<string, string>, key: string) => {\n      tmp[key] = `:sampleInput.` + key;\n      return tmp;\n    }, {});\n  })();\n\n  nodes[\"node\"] = {\n    isResult: true,\n    agent: agentName,\n    params: sample.params,\n    inputs: inputs,\n    graph: sample.graph,\n  };\n  const graphData: GraphData = {\n    version: 0.5,\n    nodes,\n  };\n  return graphData;\n};\n\nexport const isNamedInputs = <NamedInput = DefaultInputData>(namedInputs: NamedInput) => {\n  return Object.keys(namedInputs || {}).length > 0;\n};\n\nexport const arrayValidate = (agentName: string, namedInputs: { array: Array<unknown> }, extra_message: string = \"\") => {\n  assert(isNamedInputs(namedInputs), `${agentName}: namedInputs is UNDEFINED!` + extra_message);\n  assert(!!namedInputs.array, `${agentName}: namedInputs.array is UNDEFINED!` + extra_message);\n  assert(Array.isArray(namedInputs.array), `${agentName}: namedInputs.array is not Array.` + extra_message);\n};\n\nexport const isNull = (data: unknown) => {\n  return data === null || data === undefined;\n};\n"],"names":["sample2GraphData","sample","agentName","nodes","inputs","Array","isArray","from","keys","forEach","key","value","Object","map","k","reduce","tmp","isResult","agent","params","graph","version","isNamedInputs","namedInputs","length","arrayValidate","extra_message","assert","array","isNull","data"],"mappings":"uCAGaA,EAAmB,CAACC,EAAiCC,KAChE,MAAMC,EAAkC,CAAE,EACpCC,EACAC,MAAMC,QAAQL,EAAOG,SACvBC,MAAME,KAAKN,EAAOG,OAAOI,QAAQC,SAASC,IACxCP,EAAM,cAAgBO,GAAO,CAC3BC,MAAOV,EAAOG,OAAOM,GACtB,IAEIE,OAAOJ,KAAKL,GAAOU,KAAKC,GAAM,IAAMA,MAE7CX,EAAmB,YAAI,CACrBQ,MAAOV,EAAOG,QAETQ,OAAOJ,KAAKP,EAAOG,QAAQW,QAAO,CAACC,EAA6BN,KACrEM,EAAIN,GAAO,gBAAkBA,EACtBM,IACN,KAGLb,EAAY,KAAI,CACdc,UAAU,EACVC,MAAOhB,EACPiB,OAAQlB,EAAOkB,OACff,OAAQA,EACRgB,MAAOnB,EAAOmB,OAMhB,MAJ6B,CAC3BC,QAAS,GACTlB,QAEc,EAGLmB,EAAgDC,GACpDX,OAAOJ,KAAKe,GAAe,CAAA,GAAIC,OAAS,EAGpCC,EAAgB,CAACvB,EAAmBqB,EAAwCG,EAAwB,MAC/GC,EAAOL,EAAcC,GAAc,GAAGrB,+BAAyCwB,GAC/EC,IAASJ,EAAYK,MAAO,GAAG1B,qCAA+CwB,GAC9EC,EAAOtB,MAAMC,QAAQiB,EAAYK,OAAQ,GAAG1B,qCAA+CwB,EAAc,EAG9FG,EAAUC,GACdA"}