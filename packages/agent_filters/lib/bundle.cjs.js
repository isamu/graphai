"use strict";var e=require("@graphai/step_runner_agent_filter"),t=require("@graphai/stream_agent_filter"),r=require("@graphai/cache_agent_filter"),n=require("ajv"),a=require("graphai"),o=require("@graphai/agent_filter_utils");const s=(e,t,r,a)=>{if(!(new n).compile(e)(t))throw new Error(`${r}(${a??"func"}) schema not matched`);return!0};const i=async(e,t,r,n,a)=>{const o=async function*(e,t,r){const{params:n,namedInputs:a,debugInfo:o,filterParams:s}=t,i={params:n,debugInfo:o,filterParams:s,namedInputs:a},c={...r,"Content-Type":"text/event-stream"},u=await fetch(e,{headers:c,method:"POST",body:JSON.stringify(i)}),l=u.body?.getReader();if(200!==u.status||!l)throw new Error("Request failed");const p=new TextDecoder("utf-8");let d=!1;for(;!d;){const{done:e,value:t}=await l.read();if(e)d=e,l.releaseLock();else{const e=p.decode(t,{stream:!0});yield e}}}(t,r,n),s=[];for await(const t of o)a&&console.log(t),t&&(s.push(t),-1===s.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const i=s.join("").split("___END___")[1];return JSON.parse(i)};Object.defineProperty(exports,"consoleStepRunner",{enumerable:!0,get:function(){return e.consoleStepRunner}}),Object.defineProperty(exports,"stepRunnerGenerator",{enumerable:!0,get:function(){return e.stepRunnerGenerator}}),Object.defineProperty(exports,"streamAgentFilterGenerator",{enumerable:!0,get:function(){return t.streamAgentFilterGenerator}}),Object.defineProperty(exports,"cacheAgentFilterGenerator",{enumerable:!0,get:function(){return r.cacheAgentFilterGenerator}}),Object.defineProperty(exports,"sortObjectKeys",{enumerable:!0,get:function(){return r.sortObjectKeys}}),Object.defineProperty(exports,"agentFilterRunnerBuilder",{enumerable:!0,get:function(){return o.agentFilterRunnerBuilder}}),exports.agentInputValidator=s,exports.httpAgentFilter=async(e,t)=>{const{params:r,debugInfo:n,filterParams:o,namedInputs:s,config:c}=e;if(o?.server){const{baseUrl:t,isDebug:u,serverAgentUrlDictionary:l}=o.server,p=c?.headers??{};if(!a.isObject(p))throw new Error("httpAgentFilter: headers is not object.");const d=n.agentId,f=void 0!==o.streamTokenCallback,g=l&&d&&l[d]?l[d]:[t,d].join("/");void 0===g&&console.log("httpAgentFilter: Url is not defined");const m={params:r,debugInfo:n,filterParams:o,namedInputs:s,inputs:s};return f?await i(e,g,m,p,u):await(async(e,t,r)=>{const n={...r,"Content-Type":"application/json"},a=await fetch(e,{method:"post",headers:n,body:JSON.stringify(t)});return await a.json()})(g,m,p)}return t(e)},exports.namedInputValidatorFilter=async(e,t)=>{const{inputSchema:r,namedInputs:n}=e,{agentId:a,nodeId:o}=e.debugInfo;return r&&"array"!==r.type&&s(r,n||{},o,a),t(e)};
//# sourceMappingURL=bundle.cjs.js.map
