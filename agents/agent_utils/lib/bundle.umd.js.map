{"version":3,"file":"bundle.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { AgentFunctionInfoSample, GraphData, NodeData, DefaultInputData, assert } from \"graphai\";\nexport * from \"./type\";\n\nexport const sample2GraphData = (sample: AgentFunctionInfoSample, agentName: string) => {\n  const nodes: Record<string, NodeData> = {};\n  const inputs = (() => {\n    if (Array.isArray(sample.inputs)) {\n      Array.from(sample.inputs.keys()).forEach((key) => {\n        nodes[\"sampleInput\" + key] = {\n          value: sample.inputs[key],\n        };\n      });\n      return Object.keys(nodes).map((k) => \":\" + k);\n    }\n    nodes[\"sampleInput\"] = {\n      value: sample.inputs,\n    };\n    return Object.keys(sample.inputs).reduce((tmp: Record<string, string>, key: string) => {\n      tmp[key] = `:sampleInput.` + key;\n      return tmp;\n    }, {});\n  })();\n\n  nodes[\"node\"] = {\n    isResult: true,\n    agent: agentName,\n    params: sample.params,\n    inputs: inputs,\n    graph: sample.graph,\n  };\n  const graphData: GraphData = {\n    version: 0.5,\n    nodes,\n  };\n  return graphData;\n};\n\nexport const isNamedInputs = <NamedInput = DefaultInputData>(namedInputs: NamedInput) => {\n  return Object.keys(namedInputs || {}).length > 0;\n};\n\nexport const arrayValidate = (agentName: string, namedInputs: { array: Array<unknown> }, extra_message: string = \"\") => {\n  assert(isNamedInputs(namedInputs), `${agentName}: namedInputs is UNDEFINED!` + extra_message);\n  assert(!!namedInputs.array, `${agentName}: namedInputs.array is UNDEFINED!` + extra_message);\n  assert(Array.isArray(namedInputs.array), `${agentName}: namedInputs.array is not Array.` + extra_message);\n};\n\nexport const isNull = (data: unknown) => {\n  return data === null || data === undefined;\n};\n"],"names":["assert"],"mappings":";;;;;;UAGa,gBAAgB,GAAG,CAAC,MAA+B,EAAE,SAAiB,KAAI;QACrF,MAAM,KAAK,GAA6B,EAAE;IAC1C,IAAA,MAAM,MAAM,GAAG,CAAC,MAAK;YACnB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;IAChC,YAAA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;IAC/C,gBAAA,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,GAAG;IAC3B,oBAAA,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;qBAC1B;IACH,YAAA,CAAC,CAAC;IACF,YAAA,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YAC/C;YACA,KAAK,CAAC,aAAa,CAAC,GAAG;gBACrB,KAAK,EAAE,MAAM,CAAC,MAAM;aACrB;IACD,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAA2B,EAAE,GAAW,KAAI;IACpF,YAAA,GAAG,CAAC,GAAG,CAAC,GAAG,CAAA,aAAA,CAAe,GAAG,GAAG;IAChC,YAAA,OAAO,GAAG;YACZ,CAAC,EAAE,EAAE,CAAC;QACR,CAAC,GAAG;QAEJ,KAAK,CAAC,MAAM,CAAC,GAAG;IACd,QAAA,QAAQ,EAAE,IAAI;IACd,QAAA,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,MAAM,CAAC,MAAM;IACrB,QAAA,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB;IACD,IAAA,MAAM,SAAS,GAAc;IAC3B,QAAA,OAAO,EAAE,GAAG;YACZ,KAAK;SACN;IACD,IAAA,OAAO,SAAS;IAClB;AAEO,UAAM,aAAa,GAAG,CAAgC,WAAuB,KAAI;IACtF,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC;IAClD;AAEO,UAAM,aAAa,GAAG,CAAC,SAAiB,EAAE,WAAsC,EAAE,aAAA,GAAwB,EAAE,KAAI;IACrH,IAAAA,cAAM,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAA,EAAG,SAAS,CAAA,2BAAA,CAA6B,GAAG,aAAa,CAAC;IAC7F,IAAAA,cAAM,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAA,EAAG,SAAS,CAAA,iCAAA,CAAmC,GAAG,aAAa,CAAC;IAC5F,IAAAA,cAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,GAAG,SAAS,CAAA,iCAAA,CAAmC,GAAG,aAAa,CAAC;IAC3G;AAEO,UAAM,MAAM,GAAG,CAAC,IAAa,KAAI;IACtC,IAAA,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS;IAC5C;;;;;;;;;;;"}