{"version":3,"file":"bundle.cjs.min.js","sources":["../src/index.ts"],"sourcesContent":["import { AgentFunctionInfoSample, GraphData, NodeData, DefaultInputData, assert } from \"graphai\";\nexport * from \"./type\";\n\nexport const sample2GraphData = (sample: AgentFunctionInfoSample, agentName: string) => {\n  const nodes: Record<string, NodeData> = {};\n  const inputs = (() => {\n    if (Array.isArray(sample.inputs)) {\n      Array.from(sample.inputs.keys()).forEach((key) => {\n        nodes[\"sampleInput\" + key] = {\n          value: sample.inputs[key],\n        };\n      });\n      return Object.keys(nodes).map((k) => \":\" + k);\n    }\n    nodes[\"sampleInput\"] = {\n      value: sample.inputs,\n    };\n    return Object.keys(sample.inputs).reduce((tmp: Record<string, string>, key: string) => {\n      tmp[key] = `:sampleInput.` + key;\n      return tmp;\n    }, {});\n  })();\n\n  nodes[\"node\"] = {\n    isResult: true,\n    agent: agentName,\n    params: sample.params,\n    inputs: inputs,\n    graph: sample.graph,\n  };\n  const graphData: GraphData = {\n    version: 0.5,\n    nodes,\n  };\n  return graphData;\n};\n\nexport const isNamedInputs = <NamedInput = DefaultInputData>(namedInputs: NamedInput) => {\n  return Object.keys(namedInputs || {}).length > 0;\n};\n\nexport const arrayValidate = (agentName: string, namedInputs: { array: Array<unknown> }, extra_message: string = \"\") => {\n  assert(isNamedInputs(namedInputs), `${agentName}: namedInputs is UNDEFINED!` + extra_message);\n  assert(!!namedInputs.array, `${agentName}: namedInputs.array is UNDEFINED!` + extra_message);\n  assert(Array.isArray(namedInputs.array), `${agentName}: namedInputs.array is not Array.` + extra_message);\n};\n\nexport const isNull = (data: unknown) => {\n  return data === null || data === undefined;\n};\n"],"names":["isNamedInputs","namedInputs","Object","keys","length","agentName","extra_message","assert","array","Array","isArray","data","sample","nodes","inputs","from","forEach","key","value","map","k","reduce","tmp","isResult","agent","params","graph","version"],"mappings":"4CAqCaA,EAAgDC,GACpDC,OAAOC,KAAKF,GAAe,CAAA,GAAIG,OAAS,wBAGpB,CAACC,EAAmBJ,EAAwCK,EAAwB,MAC/GC,EAAAA,OAAOP,EAAcC,GAAc,GAAGI,+BAAyCC,GAC/EC,WAASN,EAAYO,MAAO,GAAGH,qCAA+CC,GAC9EC,SAAOE,MAAMC,QAAQT,EAAYO,OAAQ,GAAGH,qCAA+CC,EAAc,yCAGpFK,GACdA,iCA7CuB,CAACC,EAAiCP,KAChE,MAAMQ,EAAkC,CAAA,EAClCC,EACAL,MAAMC,QAAQE,EAAOE,SACvBL,MAAMM,KAAKH,EAAOE,OAAOX,QAAQa,SAASC,IACxCJ,EAAM,cAAgBI,GAAO,CAC3BC,MAAON,EAAOE,OAAOG,GACtB,IAEIf,OAAOC,KAAKU,GAAOM,KAAKC,GAAM,IAAMA,MAE7CP,EAAmB,YAAI,CACrBK,MAAON,EAAOE,QAETZ,OAAOC,KAAKS,EAAOE,QAAQO,QAAO,CAACC,EAA6BL,KACrEK,EAAIL,GAAO,gBAAkBA,EACtBK,IACN,KAGLT,EAAY,KAAI,CACdU,UAAU,EACVC,MAAOnB,EACPoB,OAAQb,EAAOa,OACfX,OAAQA,EACRY,MAAOd,EAAOc,OAMhB,MAJ6B,CAC3BC,QAAS,GACTd,QAEc"}