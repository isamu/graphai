import{assert as r}from"graphai";const a=(r,a)=>{const s={},e=Array.isArray(r.inputs)?(Array.from(r.inputs.keys()).forEach((a=>{s["sampleInput"+a]={value:r.inputs[a]}})),Object.keys(s).map((r=>":"+r))):(s.sampleInput={value:r.inputs},Object.keys(r.inputs).reduce(((r,a)=>(r[a]=":sampleInput."+a,r)),{}));s.node={isResult:!0,agent:a,params:r.params,inputs:e,graph:r.graph};return{version:.5,nodes:s}},s=r=>Object.keys(r||{}).length>0,e=(a,e,n="")=>{r(s(e),`${a}: namedInputs is UNDEFINED!`+n),r(!!e.array,`${a}: namedInputs.array is UNDEFINED!`+n),r(Array.isArray(e.array),`${a}: namedInputs.array is not Array.`+n)},n=r=>null==r;export{e as arrayValidate,s as isNamedInputs,n as isNull,a as sample2GraphData};
//# sourceMappingURL=bundle.esm.min.js.map
